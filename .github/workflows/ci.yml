name: CI (uv)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Tests (${{ matrix.os }} | py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
        python-version: ["3.11"]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"
      # Make pytest output calm but useful
      PYTEST_ADDOPTS: "-q --maxfail=1 -ra"
      # Ensure tests can import workbench_core from repo root
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install uv
        run: python -m pip install -q uv

      # Use workflow-level conditions instead of shell conditionals (works on Windows too)
      - name: Sync deps (frozen)
        if: ${{ hashFiles('uv.lock') != '' }}
        run: uv sync --frozen

      - name: Sync deps
        if: ${{ hashFiles('uv.lock') == '' }}
        run: uv sync

      # Ensure dev tools exist even if not declared as deps
      - name: Install dev tools
        run: uv pip install -q ruff pytest mypy bandit

      - name: Lint (ruff, concise)
        run: uv run ruff check . --output-format=concise

      - name: Type-check (mypy, non-blocking)
        continue-on-error: true
        run: uv run mypy --ignore-missing-imports .

      - name: Security scan (bandit, non-blocking)
        continue-on-error: true
        run: uv run bandit -q -r .

      - name: Run tests
        run: uv run pytest
